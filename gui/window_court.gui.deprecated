window = {
	name = "court_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	allow_outside = yes

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'right_window_open', 'true' )]"
		on_start = "[GetVariableSystem.Set( 'council_tabs', 'my_council' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		on_start = "[GetVariableSystem.Clear( 'right_window_open' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		using = Window_Background

		widget = {
			size = { 100% 100% }

			# using = Window_Decoration_Thin

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COURT_WINDOW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[CourtWindow.Close]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					button_tab = {
						layoutpolicy_horizontal = expanding
						text = "COUNCIL_WINDOW_PLAYER_COURT"

						onclick = "[CourtWindow.SetShowCourt]"
						down = "[CourtWindow.IsShowCourt]"
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[CourtWindow.SetShowPrison]"
						down = "[CourtWindow.IsShowPrison]"

						text_single = {
							text = "INTRIGUE_WINDOW_PRISONERS"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}

						text_single = {
							parentanchor = vcenter|right
							position = { -20 0 }
							text = "[CourtWindow.GetPrisoners.GetTotalNumber]"

							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}
					}
				}

				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[CourtWindow.IsShowCourt]"

					vbox = {
						name = "court"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						scrollbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding

							blockoverride "scrollbox_margins" {}

							blockoverride "scrollbox_content"
							{
								spacing = 20
								margin = { 4 10 }

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 5

									datacontext = "[CourtWindow.GetCourtOwner.GetRelationOfType( GetRelation( 'court_physician' ) )]"

									text_label_center = {
										text = "RHOMAIOI_COUNCIL_WINDOW_IMPERIAL_COUNCIL"
									}

									## Co-Emperor
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/throneroom_west.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_caesar' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_coemperor|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_caesar' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_caesar' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Provincial Senator
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), GetScriptedGui('RHOMAIOI_update_senator_list').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/councilchamber.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_provincial_senator' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_provincial_senator|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_provincial_senator' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_provincial_senator' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    button_icon = {
									      name = "tab_senate"
									      visible = "[GetScriptedGui('RHOMAIOI_update_senator_list').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									      parentanchor = vcenter
									      size = { 80 80 }
									      texture = "gfx/interface/icons/traits/senator.dds"

									      onclick = "[GetVariableSystem.Toggle( 'senate_open' )]"
									      onclick = "[GetScriptedGui('RHOMAIOI_update_senator_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
									      down = "[GetVariableSystem.HasValue( 'senate_open', 'true' )]"

									      tooltip = "RHOMAIOI_senate_button"
									      using = tooltip_ws
									    }
									  }
									}

									## Eparch
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/study.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_eparch' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_eparch|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_eparch' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_eparch' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Zoste Patrikia
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/corridor_day.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_patrikia' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_patrikia|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_patrikia' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_patrikia' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Quaestor
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/sittingroom.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_quaestor' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_quaestor|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_quaestor' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_quaestor' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Great Hetaeriarch
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/armory.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_hetaeriarch' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_hetaeriarch|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_hetaeriarch' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_hetaeriarch' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Proedros
									hbox = {
									  visible = "[And(GetPlayer.GetGovernment.IsType('RHOMAIOI_imperial_government'), EqualTo_int32(GetPlayer.GetPrimaryTitle.GetTierFrame, '(int32)6'))]"

									  layoutpolicy_horizontal = expanding

									  background = {
									    texture = "gfx/interface/illustrations/event_scenes/temple.dds"
									    fittype = centercrop
									    alpha = 0.5

									    using = Mask_Rough_Edges
									  }

									  portrait_shoulders = {
									    datacontext = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_proedros' ).GetCouncillor]"
									    background = {
									      using = Background_Area
									    }
									  }

									  vbox = {
									    layoutpolicy_horizontal = expanding

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      text = "[RHOMAIOI_proedros|E]"
									    }

									    text_single = {
									      layoutpolicy_horizontal = expanding
									      visible = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_proedros' ).GetCouncillor.IsValid]"
									      text = "[GetPlayer.GetCouncillorPosition( 'RHOMAIOI_councillor_proedros' ).GetCouncillor.GetFullName]"
									      autoresize = no
									    }
									  }
									}

									## Regular Phyisician
									hbox = {
										layoutpolicy_horizontal = expanding

										background = {
											texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
											fittype = centercrop
											alpha = 0.5

											using = Mask_Rough_Edges
										}

										portrait_shoulders = {
											background = {
												using = Background_Area
											}
											blockoverride "onclick" {
												datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
												onclick = "[OpenDecisionDetailView( Decision.Self )]"

												button_icon = {
													parentanchor = center
													alwaystransparent = yes
													size = { 40 40 }
													position = {-5 -5}
													texture = "gfx/interface/icons/flat_icons/plus.dds"
												}
											}
										}

										vbox = {
											layoutpolicy_horizontal = expanding

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[court_physician|E]"
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												visible = "[Character.IsValid]"
												text = "[Character.GetFullName]"
												autoresize = no
											}

											hbox = {
												layoutpolicy_horizontal = expanding
												margin = { 0 10 }

												button_decision_entry = {
													name = "hire_physician_decision"
													datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
													visible = "[And( Not( Character.IsValid ), Decision.IsShownForPlayer )]"
													onclick = "[OpenDecisionDetailView( Decision.Self )]"

													size = { 250 40 }

													blockoverride "size_illustration" {
														size = { 250 38 }
													}

													blockoverride "deb_illustration" {
														visible = no
													}
												}

												expand = {}
											}
										}
									}
								}

								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.GetCourt))]"
									layoutpolicy_horizontal = expanding
									spacing = 20

									vbox = {
										visible = "[Not(IsDataModelEmpty(CourtWindow.GetAwayCourtiers.GetList))]"
										layoutpolicy_horizontal = expanding

										text_single = {
											text = "COUNCIL_WINDOW_AWAY_COURTIERS"
										}

										vbox = {
											name = "characters_grid"
											datacontext = "[CourtWindow.GetAwayCourtiers]"
											datamodel = "[CharacterSelectionList.GetList]"
											visible = "[Not(CharacterSelectionList.IsBuildingList)]"
											layoutpolicy_horizontal = expanding

											item = {
												widget_courtier_item = {
													layoutpolicy_horizontal = expanding
													datacontext = "[CharacterListItem.GetCharacter]"

													blockoverride "relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}

													blockoverride "description_relation_text" {
														text = "[Character.GetRelationToString( GetPlayer.Self )]"
													}
												}
											}
										}
									}

									hbox = {
										spacing = 10

										button_decision_entry = {
											name = "invite_knights_decision"
											datacontext = "[GetDecisionWithKey('invite_knights_decision')]"
											visible = "[Decision.IsShownForPlayer]"

											onclick = "[OpenDecisionDetailView(Decision.Self)]"
											using = tooltip_se

											size = { 210 30 }

											blockoverride "size_illustration" {
												size = { 210 28 }
											}

											blockoverride "deb_illustration" {
												visible = no
											}
										}

										button_decision_entry = {
											name = "invite_claimants_decision"
											datacontext = "[GetDecisionWithKey('invite_claimants_decision')]"
											visible = "[Decision.IsShownForPlayer]"

											onclick = "[OpenDecisionDetailView(Decision.Self)]"
											using = tooltip_se

											size = { 210 30 }

											blockoverride "size_illustration" {
												size = { 210 28 }
											}

											blockoverride "deb_illustration" {
												visible = no
											}
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5


										text_label_center = {
											text = "COUNCIL_WINDOW_GUESTS"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											datacontext = "[CourtWindow.GetGuests]"

											text_multi = {
												text = "COURT_WINDOW_NO_GUESTS"
												default_format = "#weak"
												autoresize = yes
												max_width = 400
												visible = "[And(Not(CharacterSelectionList.IsBuildingList), IsDataModelEmpty(CharacterSelectionList.GetList) )]"
											}

											fixedgridbox = {
												name = "characters_grid"
												datamodel = "[CharacterSelectionList.GetList]"
												visible = "[Not(CharacterSelectionList.IsBuildingList)]"
												addcolumn = 530
												addrow = 125
												setitemsizefromcell = yes

												item = {
													widget_courtier_item = {
														datacontext = "[CharacterListItem.GetCharacter]"

														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}
													}
												}
											}
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5

										text_label_center = {
											text = "COUNCIL_WINDOW_COURTIERS"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											datacontext = "[CourtWindow.GetCourt]"

											fixedgridbox = {
												name = "characters_grid"
												datamodel = "[CharacterSelectionList.GetList]"
												visible = "[Not(CharacterSelectionList.IsBuildingList)]"
												addcolumn = 530
												addrow = 125
												setitemsizefromcell = yes

												item = {
													widget_courtier_item = {
														datacontext = "[CharacterListItem.GetCharacter]"

														blockoverride "description_relation_text" {
															text = "[Character.GetRelationToString( GetPlayer.Self )]"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}

				## PRISONERS
				vbox = {
					datacontext = "[CourtWindow.GetPrisoners]"
					visible = "[CourtWindow.IsShowPrison]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_single = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						text = "PRISON_EMPTY"
						default_format = "#weak"
					}

					background = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						texture = "gfx/interface/illustrations/event_scenes/dungeon.dds"
						margin = { -5 0 }
						fittype = centercrop
						framesize = { 700 800 }
						frame = 2

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					background = {
						visible = "[GreaterThan_int32( CharacterSelectionList.GetTotalNumber, '(int32)4' )]"
						texture = "gfx/interface/illustrations/event_scenes/dungeon.dds"
						margin = { -5 0 }
						fittype = end
						alpha = 0.7

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					## Layout with more than MAX_PRISONER_COUNT_GRID(4) prisoners
					vbox_character_list = {
						visible = "[GreaterThan_int32( CourtWindow.GetPrisoners.GetTotalNumber, GetDefine( 'NGui', 'MAX_PRISONER_COUNT_GRID' ) )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "container_implementation"
						{
							fixedgridbox = {
								name = "characters_grid"
								datamodel = "[CharacterSelectionList.GetList]"
								visible = "[Not(CharacterSelectionList.IsBuildingList)]"
								layoutpolicy_horizontal = expanding
								addcolumn = 520
								addrow = 167
								datamodel_reuse_widgets = yes

								item = {
									vbox = {
										maximumsize = { 520 167 }

										widget_character_list_item_finder = {
											layoutpolicy_horizontal = expanding
											blockoverride "divider" {}
											blockoverride "character_relation" {}
										}

										hbox = {
											name = "prisoner_data"
											layoutpolicy_horizontal = expanding
											margin = { 10 10 }
											spacing = 5

											background = {
												using = Background_Area_Dark
											}

											vbox = {
												name = "info_text"
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding

												text_single = {
													visible = "[CharacterListItem.GetCharacter.IsImprisoned]"
													name = "type"
													layoutpolicy_horizontal = expanding
													text = "[CharacterListItem.GetText('tooltip')]"
													default_format = "#low"
													autoresize = no
												}

												hbox = {
													layoutpolicy_horizontal = expanding
													spacing = 5
													visible = "[CharacterListItem.GetCharacter.IsImprisoned]"

													icon = {
														texture = "gfx/interface/icons/portraits/punishment.dds"
														size = { 30 30 }
													}

													text_single = {
														name = "imprisoned_time"
														layoutpolicy_horizontal = expanding
														text = "[CharacterListItem.GetText('imprisoned_time')]"
														autoresize = no
													}
												}

												expand = {}
											}

											button_checkbox = {
												name = "lock_from_mass_actions"
												checked = "[CharacterListItem.GetBool('is_mass_action_locked')]"
												onclick = "[CharacterListItem.OnClick('mass_action_lock')]"
												tooltip = "[CharacterListItem.GetText('mass_action_lock_tooltip')]"
											}

											hbox = {
												spacing = 3

												button_round  = {
													name = "ransom"
													enabled = "[CharacterListItem.GetBool('can_ransom')]"

													button_prison_ransom = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('ransom')]"
														enabled = "[CharacterListItem.GetBool('can_ransom')]"
														tooltip = "[CharacterListItem.GetText('ransom_tooltip')]"
														using = tooltip_se
													}
												}

												button_round  = {
													name = "release"
													enabled = "[CharacterListItem.GetBool('can_release')]"

													button_prison_release = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('release')]"
														enabled = "[CharacterListItem.GetBool('can_release')]"
														tooltip = "[CharacterListItem.GetText('release_tooltip')]"
														using = tooltip_se
													}
												}

												button_round  = {
													name = "execute"
													enabled = "[CharacterListItem.GetBool('can_execute')]"

													button_prison_execute = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('execute')]"
														enabled = "[CharacterListItem.GetBool('can_execute')]"
														tooltip = "[CharacterListItem.GetText('execute_tooltip')]"
														using = tooltip_se
													}
												}
											}
										}
									}
								}
							}
						}

						blockoverride "bottom_bar"
						{
							hbox = {
								margin = { 10 0 }
								spacing = 3

								text_single = {
									text = "MASS_PRISONER_ACTIONS"
									default_format = "#low"
									align = nobaseline
								}

								spacer = {
									size = { 5 5 }
								}

								button_round  = {
									name = "ransom"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('ransom')]"

									button_prison_ransom = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('ransom')]"
										enabled = "[CourtWindow.CanDoMassPrisonerAction('ransom')]"
										tooltip = MASS_PRISONER_ACTION_RANSOM
										using = tooltip_se
									}
								}

								button_round  = {
									name = "release"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('release')]"

									button_prison_release = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('release')]"
										enabled = "[CourtWindow.CanDoMassPrisonerAction('release')]"
										tooltip = MASS_PRISONER_ACTION_RELEASE
										using = tooltip_se
									}
								}

								button_round  = {
									name = "execute"
									enabled = "[CourtWindow.CanDoMassPrisonerAction('execute')]"

									button_prison_execute = {
										parentanchor = center
										onclick = "[CourtWindow.MassPrisonerAction('execute')]"
										enabled = "[CourtWindow.CanDoMassPrisonerAction('execute')]"
										tooltip = MASS_PRISONER_ACTION_EXECUTE
										using = tooltip_se
									}
								}
							}
						}
					}

					## Layout with MAX_PRISONER_COUNT_GRID(4) or fewer prisoners
					vbox = {
						visible = "[And( GreaterThan_int32( CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0' ), LessThanOrEqualTo_int32( CourtWindow.GetPrisoners.GetTotalNumber, GetDefine( 'NGui', 'MAX_PRISONER_COUNT_GRID' ) ) )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin = { 15 15 }

						fixedgridbox = {
							datamodel = "[CharacterSelectionList.GetList]"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							addcolumn = 262
							addrow = 405
							datamodel_wrap = 2
							flipdirection = yes
							#setitemsizefromcell = yes

							item = {
								widget = {
									size = { 262 395}
									datacontext = "[CharacterListItem.GetCharacter]"

									background = {
										texture = "gfx/interface/illustrations/event_scenes/dungeon.dds"
										margin = { -5 0 }
										fittype = centercrop
										alpha = 0.3

										using = Mask_Rough_Edges
									}

									background = {
										using = Background_Frame
										alpha = 0.5
									}

									widget = {
										size = { 100% 100% }
										scissor = yes

										portrait_body = {
											parentanchor = bottom|hcenter
											position = { 0 -70 }

											blockoverride "coa" {}
											blockoverride "opinion_box" {}
											blockoverride "status_icons" {}
										}
									}

									vbox = {
										expand = {}

										hbox = {
											layoutpolicy_horizontal = expanding
											margin = { 5 5 }

											expand = {}

											hbox = {
												spacing = 5

												background = {
													using = Background_Area
												}

												vbox = {
													margin_bottom = 3

													expand = {}

													portrait_status_icons = {}
												}

												vbox = {
													layoutpolicy_vertical = expanding

													expand = {}

													coa_realm_tiny_crown = {
														visible = "[Character.HasLandedTitles]"
													}

													portrait_opinion = {}
												}
											}
										}


										vbox = {
											layoutpolicy_horizontal = expanding
											margin = { 5 5 }

											background = {
												using = Background_Area
												margin_bottom = 3
											}

											text_single = {
												text = "[Character.GetShortUINameNoTooltip]"
												default_format = "#high"
												using = Font_Size_Medium
											}

											text_single = {
												visible = "[Character.IsImprisoned]"
												name = "type"
												text = "[CharacterListItem.GetText('tooltip')]"
											}
										}

										spacer = {
											size = { 3 3 }
										}

										### Actions
										vbox = {
											name = "actions"
											layoutpolicy_horizontal = expanding
											visible = "[And( CharacterListItem.GetCharacter.IsAlive, CharacterListItem.GetCharacter.IsImprisoned )]"
											spacing = 10
											margin = { 10 5 }
											margin_bottom = 15

											background = {
												using = Background_Area_Dark
											}

											hbox = {
												spacing = 5

												icon = {
													texture = "gfx/interface/icons/portraits/punishment.dds"
													size = { 20 20 }
												}

												text_single = {
													name = "imprisoned_time"
													layoutpolicy_horizontal = expanding
													text = "[CharacterListItem.GetText('imprisoned_time')]"
												}
											}

											hbox = {
												spacing = 8

												button_round  = {
													name = "ransom"
													enabled = "[CharacterListItem.GetBool('can_ransom')]"

													button_prison_ransom = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('ransom')]"
														enabled = "[CharacterListItem.GetBool('can_ransom')]"
														tooltip = "[CharacterListItem.GetText('ransom_tooltip')]"
														using = tooltip_se

													}
												}

												button_round  = {
													name = "release"
													enabled = "[CharacterListItem.GetBool('can_release')]"

													button_prison_release = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('release')]"
														enabled = "[CharacterListItem.GetBool('can_release')]"
														tooltip = "[CharacterListItem.GetText('release_tooltip')]"
														using = tooltip_se

													}
												}

												button_round  = {
													name = "execute"
													enabled = "[CharacterListItem.GetBool('can_execute')]"

													button_prison_execute = {
														parentanchor = center
														onclick = "[CharacterListItem.OnClick('execute')]"
														enabled = "[CharacterListItem.GetBool('can_execute')]"
														tooltip = "[CharacterListItem.GetText('execute_tooltip')]"
														using = tooltip_se
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	window_character_filter = {
		datacontext = "[CourtWindow.GetPrisoners]"
		blockoverride "addition_filter" {

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('age_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('claim_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
					}
				}
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}

	############################################
	############################################
	################## SENATE ##################
	############################################
	############################################
	window = {
	  name = "senate_view"
	  parentanchor = center
	  size = { 1300 950 }
	  position = { -650 0}
	  layer = windows_layer
	  visible = "[And(GetVariableSystem.HasValue( 'senate_open', 'true' ), GetScriptedGui('RHOMAIOI_update_senator_list').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"

	  using = Window_Background
	  using = Window_Decoration

	  vbox = {
	    using = Window_Margins

	    header_pattern = {
	      layoutpolicy_horizontal = expanding

	      blockoverride "header_text"
	      {
	        text = "[Localize('RHOMAIOI_senate_tab_name_header')]"
	      }

	      blockoverride "button_close"
	      {
	        onclick = "[GetVariableSystem.Toggle( 'senate_open')]"
	      }
	    }

	    hbox = {
	      layoutpolicy_horizontal = expanding
	      layoutpolicy_vertical = expanding

	      widget = {
	        layoutpolicy_horizontal = expanding
	        layoutpolicy_vertical = expanding

	        vbox = {
	          spacing = 10

	          divider = {
	            layoutpolicy_horizontal = expanding
	          }

	          vbox = {
	            name = "upperhouse"
	            layoutpolicy_horizontal = expanding
	            spacing = 15

	            text_label_center = {
	              text = "[RHOMAIOI_consistorium|E]"
	              using = Font_Size_Medium
	              default_format = "#high"
	            }

	            background = {
	              texture = "gfx/interface/illustrations/event_scenes/temple.dds"
	              margin = { 0 0 }
	              fittype = centercrop
	              alpha = 0.8

	              using = Mask_Rough_Edges
	            }

	            hbox = {
	              name = "consistorium_grid"
	              spacing = 70

	              dynamicgridbox = {
	                datamodel = "[GetPlayer.MakeScope.GetList('RHOMAIOI_senate_consistorium_list')]"
	                layoutpolicy_horizontal = expanding
	                layoutpolicy_vertical = expanding
	                datamodel_wrap = 7
	                flipdirection = yes

	                item = {
	                  portrait_shoulders = {
	                    datacontext = "[Scope.GetCharacter]"
	                    size = { 160 180 }

	                    background = {
	                      using = Background_Area
	                    }
	                  }
	                }
	              }
	            }
	          }

	          divider = {
	            layoutpolicy_horizontal = expanding
	          }


	          vbox = {
	            layoutpolicy_horizontal = expanding
	            layoutpolicy_vertical = expanding

	            background = {
	              texture = "gfx/interface/illustrations/event_scenes_frontend/RHOMAIOI_senate.dds"
	              margin = { 0 0 }
	              fittype = centercrop
	              alpha = 0.5

	              using = Mask_Rough_Edges
	            }

	            hbox = {
	              layoutpolicy_horizontal = expanding

	              text_label_center = {
	                text = "[RHOMAIOI_senate_populists|E]"
	              }

	              text_label_center = {
	                text = "[RHOMAIOI_senate_loyalists|E]"
	              }

	              text_label_center = {
	                text = "[RHOMAIOI_senate_republicanists|E]"
	              }
	            }

	            scrollbox = {
	              name = "lowerhouse"
	              parentanchor = top
	              layoutpolicy_vertical = expanding
	              layoutpolicy_horizontal = expanding

	              blockoverride "scrollbox_margins" {}

	              blockoverride "scrollbox_content"
	              {
	                spacing = 20
	                margin = { 0 20 }

	                hbox = {
	                  layoutpolicy_horizontal = expanding
	                  layoutpolicy_vertical = expanding
	                  spacing = 0

	                  vbox = {
	                    layoutpolicy_vertical = expanding

	                    dynamicgridbox = { # Populists
	                      datamodel = "[GetPlayer.MakeScope.GetList('RHOMAIOI_senate_populists')]"
	                      layoutpolicy_horizontal = expanding
	                      layoutpolicy_vertical = expanding
	                      datamodel_wrap = 3
	                      flipdirection = yes

	                      item = {
	                        portrait_shoulders = {
	                          datacontext = "[Scope.GetCharacter]"

	                          icon = {
	                            visible = "[GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End ) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_good.dds"
	                            tooltip = "RHOMAIOI_senate_supporting_tooltip"
	                          }

	                          icon = {
	                            visible = "[Not(GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End )) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_bad.dds"
	                            tooltip = "RHOMAIOI_senate_opposing_tooltip"
	                          }
	                        }
	                      }
	                    }
	                  }

	                  divider = {
	                    layoutpolicy_vertical = expanding
	                  }

	                  vbox = {
	                    layoutpolicy_vertical = expanding

	                    dynamicgridbox = { # Loyalists
	                      datamodel = "[GetPlayer.MakeScope.GetList('RHOMAIOI_senate_loyalists')]"
	                      layoutpolicy_horizontal = expanding
	                      layoutpolicy_vertical = expanding
	                      datamodel_wrap = 3
	                      flipdirection = yes

	                      item = {
	                        portrait_shoulders = {
	                          datacontext = "[Scope.GetCharacter]"

	                          icon = {
	                            visible = "[GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End ) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_good.dds"
	                            tooltip = "RHOMAIOI_senate_supporting_tooltip"
	                          }

	                          icon = {
	                            visible = "[Not(GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End )) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_bad.dds"
	                            tooltip = "RHOMAIOI_senate_opposing_tooltip"
	                          }
	                        }
	                      }
	                    }
	                  }

	                  divider = {
	                    layoutpolicy_vertical = expanding
	                  }

	                  vbox = {
	                    layoutpolicy_vertical = expanding

	                    dynamicgridbox = { # Republicanists
	                      datamodel = "[GetPlayer.MakeScope.GetList('RHOMAIOI_senate_republicanists')]"
	                      layoutpolicy_horizontal = expanding
	                      layoutpolicy_vertical = expanding
	                      datamodel_wrap = 3
	                      flipdirection = yes

	                      item = {
	                        portrait_shoulders = {
	                          datacontext = "[Scope.GetCharacter]"

	                          icon = {
	                            visible = "[GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End ) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_good.dds"
	                            tooltip = "RHOMAIOI_senate_supporting_tooltip"
	                          }

	                          icon = {
	                            visible = "[Not(GetScriptedGui('RHOMAIOI_senator_is_supportive').IsValid( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).AddScope('senatorruler', GetPlayer.MakeScope).End )) ]"
	                            size = { 25 25 }
	                            parentanchor = bottom|right
	                            texture = "gfx/interface/hud/toast_bg_bad.dds"
	                            tooltip = "RHOMAIOI_senate_opposing_tooltip"
	                          }
	                        }
	                      }
	                    }
	                  }
	                }
	              }
	            }
	          }

	          hbox = {
	            name = "footer_area"
	            layoutpolicy_horizontal = expanding

	            textbox = {
	              text_single = {
	                position = { 5 -5 }
	                visible = "[EqualTo_string(GetPlayer.GetTopLiege.GetActiveLawInGroupWithFlag( 'realm_law' ).GetNameNoTooltip, Localize('crown_authority_3'))]"
	                text = "[Localize('RHOMAIOI_senate_power_is_curbed')]"
	              }
	              text_single = {
	                position = { 5 -5 }
	                visible = "[EqualTo_string(GetPlayer.GetTopLiege.GetActiveLawInGroupWithFlag( 'realm_law' ).GetNameNoTooltip, Localize('crown_authority_2'))]"
	                text = "[Localize('RHOMAIOI_senate_power_is_weak')]"
	              }
	              text_single = {
	                position = { 5 -5 }
	                visible = "[EqualTo_string(GetPlayer.GetTopLiege.GetActiveLawInGroupWithFlag( 'realm_law' ).GetNameNoTooltip, Localize('crown_authority_1'))]"
	                text = "[Localize('RHOMAIOI_senate_power_is_average')]"
	              }
	              text_single = {
	                position = { 5 -5 }
	                visible = "[EqualTo_string(GetPlayer.GetTopLiege.GetActiveLawInGroupWithFlag( 'realm_law' ).GetNameNoTooltip, Localize('crown_authority_0'))]"
	                text = "[Localize('RHOMAIOI_senate_power_is_strong')]"
	              }
	            }

	            vbox = {
	              parentanchor = hcenter
	              layoutpolicy_horizontal = expanding
	              progressbar_standard = {
	                datacontext = "[GetPlayer.MakeScope]"
	                name = "loyalty"
	                size = { 240 25 }
	                min = 0
	                max = "[IntToFloat(GetDataModelSize(Scope.GetList('RHOMAIOI_senate_list_of_all_current_senators')))]"
	                value = "[IntToFloat(GetDataModelSize(Scope.GetList('RHOMAIOI_senate_list_of_supporters')))]"

	                text_single = {
	                  parentanchor = top|hcenter
	                  position = { 0 -2 }
	                  text = "[RHOMAIOI_senate_approval|E]: [GetDataModelSize(Scope.GetList('RHOMAIOI_senate_list_of_supporters'))] / [GetDataModelSize(Scope.GetList('RHOMAIOI_senate_list_of_all_current_senators'))]"
	                }
	              }
	            }

	            vbox = {
	              button_decision_entry = {
	                name = "abolish_senate"
	                datacontext = "[GetDecisionWithKey( 'RHOMAIOI_dissolve_senate' )]"
	                onclick = "[OpenDecisionDetailView( Decision.Self )]"
	                onclick = "[GetVariableSystem.Toggle( 'senate_open' )]"

	                size = { 250 40 }

	                blockoverride "size_illustration" {
	                  size = { 250 38 }
	                }

	                blockoverride "deb_illustration" {
	                  visible = no
	                }
	              }
	            }
	          }
	        }
	      }
	    }
	  }
	}
}
