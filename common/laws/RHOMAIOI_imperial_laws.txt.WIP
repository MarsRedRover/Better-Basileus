@crown_authority_cooldown_years = 20

RHOMAIOI_crown_authority = {
	default = RHOMAIOI_crown_authority_2
	cumulative = yes
	flag = realm_law
	
	RHOMAIOI_crown_authority_0 = {
		modifier = {
			barons_and_minor_landholders_opinion = 20
			glory_hound_opinion = 10
			parochial_opinion = 10
			courtly_opinion = 5
		}
		flag = uses_crown_authority

		can_keep = { realm_law_use_crown_authority = yes }

		on_pass = {
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}
	}
	
	RHOMAIOI_crown_authority_1 = {
		modifier = {
			barons_and_minor_landholders_opinion = -30
			glory_hound_opinion = -15
			parochial_opinion = -15
			courtly_opinion = -5
			minority_opinion = -10
		}
		flag = uses_crown_authority
		flag = title_revocation_allowed
		flag = vassal_retraction_allowed
		flag = can_change_partition_succession_laws
		flag = diarchs_want_to_subsidise_without_this_flag

		can_keep = { realm_law_use_crown_authority = yes }

		can_pass = {
			trigger_if = {
				limit = { has_realm_law = crown_authority_0 }
				custom_description = {
					subject = root
					text = "has_crown_authority_cooldown"
					NAND = {
						has_variable = crown_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
			can_pass_law_ca1_trigger = yes
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = crown_authority_2
							has_realm_law = crown_authority_3
						}
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = crown_authority_0 }
				value = 1
			}
		}
	}
	
	RHOMAIOI_crown_authority_2 = {
		modifier = {
			barons_and_minor_landholders_opinion = -10
			glory_hound_opinion = -10
			parochial_opinion = -10
			courtly_opinion = -5
			zealot_opinion = -10
			minority_opinion = -10
			vassal_tax_contribution_mult = 0.1
			vassal_levy_contribution_mult = 0.1
		}
		flag = uses_crown_authority
		flag = vassal_internal_wars_banned
		flag = vassal_refusal_is_treason
		flag = can_change_succession_laws
		flag = titles_cannot_leave_realm_on_succession # Hardcoded flag
		
		can_keep = { realm_law_use_crown_authority = yes }

		can_pass = {
			trigger_if = {
				limit = {
					NOT = { has_realm_law = crown_authority_3 }
				}
				has_realm_law = crown_authority_1
				custom_description = {
					subject = root
					text = "has_crown_authority_cooldown"
					NAND = {
						has_variable = crown_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
			can_pass_law_ca2_trigger = yes
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_3 }
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = crown_authority_1 }
				value = 1
			}
		}
	}
	
	RHOMAIOI_crown_authority_3 = {
		# limit = { has_flag = government_is_imperial_autocracy }
		modifier = {
			scope:actor = { 
				limit = { has_flag = government_is_imperial_autocracy }
				barons_and_minor_landholders_opinion = 20
				glory_hound_opinion = 25
				parochial_opinion = 25
				courtly_opinion = 10
				zealot_opinion = 20
				minority_opinion = 30
				vassal_tax_contribution_mult = 0.25
				vassal_levy_contribution_mult = 0.25
			}
			barons_and_minor_landholders_opinion = 20
			glory_hound_opinion = 25
			parochial_opinion = 25
			courtly_opinion = 10
			zealot_opinion = 20
			minority_opinion = 30
			vassal_tax_contribution_mult = 0.25
			vassal_levy_contribution_mult = 0.25
		}

		flag = uses_crown_authority
		flag = vassal_all_wars_banned
		flag = can_designate_heirs
		flag = max_authority_level
		
		can_keep = { realm_law_use_crown_authority = yes }

		can_pass = {
			has_realm_law = crown_authority_2
			custom_description = {
				subject = root
				text = "has_crown_authority_cooldown"
				NAND = {
					has_variable = crown_authority_cooldown
					NOT = {
						culture = { has_innovation = innovation_all_things }
					}
				}
			}
			can_pass_law_ca3_trigger = yes
		}
		
		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_3 }
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}
		
		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
			# Remove modifiers.
			remove_law_related_modifiers_effect = yes
		}
	}
}